name: Web CI

on:
  pull_request:
    paths-ignore:
      - 'frontend/**'
      - 'workers/**'
  push:
    paths-ignore:
      - 'frontend/**'
      - 'workers/**'
    branches:
      - main
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      AUDIO_PATH: '/'
      REDIS_URL: redis://redis:6379/0
      DATABASE_HOST: 127.0.0.1
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.cache-key }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2.0'
    - name: Generate cache key
      id: cache-keys
      run: echo "::set-output name=cache-key::$(echo ${{ hashFiles('**/Gemfile.lock') }})"
    - name: Cache Ruby gems
      uses: actions/cache@v3
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ steps.cache-keys.outputs.cache-key }}
        restore-keys: |
          ${{ runner.os }}-gems-

  rubocop:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2.0'
    - name: Cache Ruby gems
      uses: actions/cache@v3
      with:
        path: vendor/bundle
        key: ${{ needs.setup.outputs.cache-key }}
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        gem install bundler
        bundle install
    - name: Run Rubocop
      run: bundle exec rubocop

  rspec:
    needs: setup
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0.25
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2.0'
    - name: Cache Ruby gems
      uses: actions/cache@v3
      with:
        path: vendor/bundle
        key: ${{ needs.setup.outputs.cache-key }}
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        gem install bundler
        bundle install
    - name: Set up database
      run: |
        sudo apt-get install -y libmysqlclient-dev
        bundle exec rake db:create ridgepole:apply
    - name: Run tests
      run: bundle exec rspec