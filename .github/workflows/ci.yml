name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - develop

jobs:
  rails:
    runs-on: ubuntu-latest
    env:
      AUDIO_PATH: '/'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Compose
      run: docker-compose -f docker-compose.yml up -d db redis
    - name: Wait for MySQL to be ready
      run: |
        until docker-compose exec -T db mysqladmin ping --silent; do
          echo 'waiting for mysql to be connectable...'
          sleep 1
        done
    - name: Build and run web service
      run: docker-compose -f docker-compose.yml up -d web
    - name: Install dependencies
      run: docker-compose exec -T web bundle install
    - name: Run Rubocop
      run: docker compose exec -T web bundle exec rubocop -c .rubocop.yml
    - name: Run Rspec
      run: docker-compose exec -T web bundle exec rspec
    - name: Stop and remove Docker containers
      run: docker-compose down

  flask:
    runs-on: ubuntu-latest
    env:
      AUDIO_PATH: '/'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Compose
      run: docker-compose -f docker-compose.yml up -d db redis
    - name: Build and run worker service
      run: docker-compose -f docker-compose.yml up -d worker
    - name: Install dependencies
      run: docker-compose exec -T worker bash -c "./venv/bin/pip install -r requirements.txt --verbose"
    - name: Run pylint
      run: docker compose exec -T worker bash -c  "pylint --rcfile=/usr/src/app/pylintrc /usr/src/app/*.py"
    - name: Run pytest
      run: docker-compose exec -T worker bash -c "pytest"
    - name: Stop and remove Docker containers
      run: docker-compose down

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
    - name: Install dependencies
      run: yarn install
    - name: Run lint
      run: yarn lint
